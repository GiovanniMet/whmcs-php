{"service_name":"php-coveralls","service_event_type":"manual","repo_token":"yHUBDPnumGp0tgiqWFWgelTphyJ54tpJ0","git":{"branch":"master","head":{"id":"f9eedbf483de0f0d600df24868a4cc7155012ed3","author_name":"Mochamad Gufron","author_email":"mgufronefendi@gmail.com","committer_name":"Mochamad Gufron","committer_email":"mgufronefendi@gmail.com","message":"fix mockery magic method"},"remotes":[{"name":"origin","url":"git@github.com:mgufrone\/whmcs-php.git"}]},"run_at":"2015-05-21 01:20:51 +0000","source_files":[{"name":"src\/Config.php","source":"<?php namespace Gufy\\WhmcsPhp;\nuse GuzzleHttp\\Client;\nclass Config\n{\n  private $baseUrl = 'http:\/\/localhost\/includes\/api.php';\n  private $username = '';\n  private $password = '';\n  private $authType = 'password';\n  private $responseType = 'json';\n  private $response = 'object';\n  public function __construct(array $config=[])\n  {\n    foreach($config as $key=>&$value)\n    {\n      $this->$key = $value;\n    }\n    return $this;\n  }\n  public function getBaseUrl()\n  {\n    return $this->baseUrl;\n  }\n  public function setBaseUrl($url)\n  {\n    $this->baseUrl = $url;\n    return $this;\n  }\n  public function getUsername()\n  {\n    return $this->username;\n  }\n  public function setUsername($username)\n  {\n    $this->username = $username;\n    return $this;\n  }\n  public function getPassword()\n  {\n    return md5($this->password);\n  }\n  public function setPassword($password)\n  {\n    $this->password = $password;\n    return $this;\n  }\n  public function getResponseType()\n  {\n    return $this->responseType;\n  }\n  public function setResponseType($responseType)\n  {\n    $this->responseType = $responseType;\n    return $this;\n  }\n  public function getResponse()\n  {\n    return $this->response;\n  }\n  public function setResponse($response)\n  {\n    $this->response = $response;\n    return $this;\n  }\n  public function getAuthType()\n  {\n    return $this->authType;\n  }\n  public function setAuthType($authType)\n  {\n    $this->authType = $authType;\n    return $this;\n  }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,7,null,7,7,7,null,null,null,7,null,null,null,1,1,null,null,null,7,null,null,null,1,1,null,null,null,7,null,null,null,1,1,null,null,null,2,null,null,null,1,1,null,null,null,2,null,null,null,1,1,null,null,null,2,null,null,null,1,1,null,null]},{"name":"src\/Exceptions\/ReadOnlyException.php","source":"<?php namespace Gufy\\WhmcsPhp\\Exceptions;\nuse Exception;\nclass ReadOnlyException extends Exception\n{\n  public function __construct($message, $code=0, Exception $previous=null)\n  {\n    $message = \"You are not allowed to override this key : \".$message;\n    parent::__construct($message, $code, $previous);\n  }\n}","coverage":[null,null,null,null,null,null,2,2,2,null]},{"name":"src\/Exceptions\/ResponseException.php","source":"<?php namespace Gufy\\WhmcsPhp\\Exceptions;\nuse Exception;\nclass ResponseException extends Exception\n{\n  public function __construct($message, $code=0, Exception $previous=null)\n  {\n    parent::__construct($message, $code, $previous);\n  }\n}","coverage":[null,null,null,null,null,null,2,2,null]},{"name":"src\/Whmcs.php","source":"<?php namespace Gufy\\WhmcsPhp;\nuse GuzzleHttp\\Client;\nuse GuzzleHttp\\Exception\\ClientException;\nuse Gufy\\WhmcsPhp\\Exceptions\\ResponseException;\nuse Closure;\nclass Whmcs\n{\n  private $callbacks = [];\n  public function __construct(Config $config)\n  {\n    $this->config =& $config;\n  }\n  public function execute($action, $parameters=[])\n  {\n    $client = new Client;\n    $this->beforeExecute($client);\n    $parameters['action'] = $action;\n    $parameters['username'] = $this->config->getUsername();\n    $parameters['password'] = $this->config->getPassword();\n    $parameters['responsetype'] = 'json';\n    try\n    {\n      $response = $client->post($this->config->getBaseUrl(), ['body'=>$parameters,'timeout' => 1200,'connect_timeout' => 10]);\n\n      return $this->processResponse($response->json());\n    }\n    catch(ClientException $e)\n    {\n      $response = $e->getResponse()->json();\n      throw new ResponseException($response['message']);\n    }\n  }\n  public function beforeExecute(Client &$client)\n  {\n    foreach($this->callbacks as $closure)\n    {\n      $closure($client);\n    }\n    return $this;\n  }\n  public function setBeforeExecute(Closure $callback)\n  {\n    return $this->callbacks[] = $callback;\n  }\n  public function processResponse($response)\n  {\n    return new WhmcsResponse($response);\n  }\n  public function __call($function, array $arguments=[])\n  {\n    return call_user_func_array([$this, 'execute'], [$function, $arguments]);\n  }\n}","coverage":[null,null,null,null,null,null,null,null,null,null,5,5,null,null,5,5,5,5,5,5,null,null,5,null,4,null,2,null,1,1,null,null,null,null,5,null,1,5,5,null,null,null,1,null,null,null,4,null,null,null,5,null,null]},{"name":"src\/WhmcsResponse.php","source":"<?php namespace Gufy\\WhmcsPhp;\nuse ArrayAccess;\nuse Gufy\\WhmcsPhp\\Exceptions\\ResponseException;\nuse Gufy\\WhmcsPhp\\Exceptions\\ReadOnlyException;\nclass WhmcsResponse implements ArrayAccess\n{\n  private $response;\n  public function __construct($response)\n  {\n    $this->response = $response;\n    if(false === $this->isSuccess())\n    throw new ResponseException($this->message);\n  }\n  public function isSuccess()\n  {\n    \/\/ print_r($this->response);\n    return $this->response['result'] == 'success';\n  }\n  public function __get($var)\n  {\n    return $this->response[$var];\n  }\n  public function offsetGet($var)\n  {\n    return $this->response[$var];\n  }\n  public function offsetSet($var, $value='')\n  {\n    throw new ReadOnlyException($var);\n  }\n  public function offsetExists($var)\n  {\n    return isset($this->response[$var]);\n  }\n  public function offsetUnset($var)\n  {\n    throw new ReadOnlyException($var);\n  }\n}","coverage":[null,null,null,null,null,null,null,null,null,4,4,4,3,null,null,null,4,null,null,null,1,null,null,null,0,null,null,null,1,null,null,null,2,null,null,null,1,null,null]}],"environment":{"packagist_version":"0.7.0-dev"}}